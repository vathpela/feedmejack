#!/usr/bin/python3

import sys
import os
from decimal import Decimal as _Decimal

def frange(x, y, step):
    if x > y:
        if step >= 0:
            step = -step
        while x > y:
            yield x
            x += step
    else:
        while x < y:
            yield x
            x += step

class GCode(object):
    def __init__(self, cmd, order, **tmpls):
        self.cmd = cmd
        self.order = order
        self.tmpls = tmpls

    def string(self, **args):
        s = "%s" % (self.cmd,)
        for x in self.order:
            try:
                s += " %s" % (self.tmpls[x] % args[x])
            except KeyError:
                pass

        return "%s" % (s,)

    def print(self, **args):
        s = self.string(**args)
        print("%s" % (s,))

if __name__ == '__main__':
    l = len(sys.argv)
    if l != 4 and l != 7:
        print("Usage: arc startx starty radius [startz endz stepz]")
        sys.exit(1)

    g0 = GCode("G0", ['x', 'y', 'z'],
            x="X%0.03f", y="Y%0.03f", z="Z%0.03f")
    g1 = GCode("G1", ['f','x','y','z'],
            x="X%0.03f", y="Y%0.03f", z="Z%0.03f", f='F%d')
    g2 = GCode("G2", ['f','x','y','z','i','j'],
            x="X%0.03f", y="Y%0.03f", i="I%0.03f", j="J%0.03f", f='F%d',
            z="Z%0.03f")
    g3 = GCode("G3", ['f','x','y','z','i','j'],
            x="X%0.03f", y="Y%0.03f", i="I%0.03f", j="J%0.03f", f='F%d',
            z="Z%0.03f")

    sx=_Decimal(sys.argv[1])
    sy=_Decimal(sys.argv[2])
    radius=_Decimal(sys.argv[3])
    if radius < 0:
        left = True
        radius = -radius
    else:
        left = False

    sz=None
    endz=None
    stepz=None

    if l == 7:
        sz=_Decimal(sys.argv[4])
        endz=_Decimal(sys.argv[5])
        stepz=_Decimal(sys.argv[6])

    print("%s" % (g0.string(z=40),))
    print("%s" % (g0.string(x=sx, y=sy),))
    if sz != None:
        print("%s" % (g0.string(z=(sz*1.1)),))
        print("%s" % (g1.string(z=sz, f=10),))

    if left:
        i = 1
    else:
        i = 0

    for z in frange(sz, endz, stepz):
        #print("%s" % (g1.string(z=z, f=10),))
        if left:
            cwx=sx
            cwy=sy

            ccwx=sx-radius
            ccwy=sy-radius
        else:
            cwx=sx+radius
            cwy=sy-radius
            #cwx=sx
            #cwy=sy

            ccwx=sx
            ccwy=sy

        if i % 2 == 0:
            print("%s" % (g2.string(x=cwx, y=cwy, i=0, j=-radius,
                f=25, z=z),))
        else:
            print("%s" % (g3.string(x=ccwx, y=ccwy, i=-radius, j=0,
                f=25, z=z),))
        i += 1

    if left == True and i % 2 == 0:
        print("%s" % (g2.string(x=cwx, y=cwy, i=0, j=-radius,
                f=10),))
    if left == False and i % 2 != 0:
        print("%s" % (g3.string(x=ccwx, y=ccwy, i=-radius, j=0,
                f=10),))

    print("%s" % (g1.string(z=40, f=100),))

